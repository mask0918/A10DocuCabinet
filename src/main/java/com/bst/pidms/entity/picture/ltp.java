package com.bst.pidms.entity.picture;


import java.io.IOException;
import java.io.UnsupportedEncodingException;
import java.net.URLEncoder;
import java.util.HashMap;
import java.util.Map;

import org.apache.commons.codec.binary.Base64;
import org.apache.commons.codec.digest.DigestUtils;


public class ltp {
    // webapi接口地址
    private static final String WEBTTS_URL = "http://ltpapi.xfyun.cn/v1/ke";
    // 应用ID
    private static final String APPID = "5c6f65aa";
    // 接口密钥
    private static final String API_KEY = "2a2d9be769baab02143cd65f26c2e755";
    // 文本
    private static final String TEXT = "1\t项目背景随着数字化时代的到来，个人文档管理系统作为日常工作和生活的需要，人们对它的需求也正发生着重大的改变。传统的文档管理系统，各自为政，信息不能互通，导致“信息孤岛”，带来诸如“信息碎片”的问题。对文件的管理只是简单操纵文件，不能记录自己对文档的看法、评价；日常工作中，在不断地整理、认识自己的资料，而这些有用“知识”却不能反映到系统之中，靠自己的记忆来保持等问题，无法满足个人日常生活、工作的需要。在此背景下，XXX项目组针对发包方杭州自动化技术研究院有限公司的需求，设计智能化个人文档管理系统。一个智能化的个人文档管理系统面对日积月累的资料能够得到准确、合适、完整、高质量的信息，从而提高日常生活和工作效率。2\t项目定义与用户期望2.1.项目定义XXX项目组为杭州自动化技术研究院有限公司定制开发的个人文档智能化管理系统，满足便捷操作，高效服务的性能需求。个人文档智能化管理系统分为平台管理端和用户端两大平台，为系统运行方管理员、用户提供服务。平台管理端为系统运行方服务，实现对用户信息管理、用户权限管理、对上传内容审核管理、反馈管理等功能。用户端为用户服务，提供文档上传下载、语音搜索、文档搜索、在线预览、在线编辑、收藏关注文档、历史使用记录等操作。2.1.1.平台管理端平台管理端为系统运行方提供服务，包括用户管理、权限管理、文件管理、反馈管理四大功能。用户管理可对注册使用本系统的用户信息管理，权限管理可以对用户使用本系统同所具有的权限进行管理，文件管理可以对所有文档进行统计，对用户文档进行排查是否违法，以及用户文档敏感词管理，反馈管理可以对用户对本产品的建议以及投诉进行分类管理。为用户提供更加优质的服务。2.1.2\t用户端用户端为用户服务，包括个人资料管理、文档上传和下载、文档搜索、文档在线编辑和预览、关注文档、收藏文档、查看历史记录、邮箱管理、任务清单管理等功能。用户在移动端和Web端可以进行注册以及完善个人资料，注册成功后，可以进行文档的上传和下载，对文件添加标签记录用户对这些资料的观点、喜好、评价，文档智能化搜索，输入关键字便可得到与之有关的所有文件，用户还可以在移动端使用语音搜索，只需说出与文件关联的信息便可进行搜索。文档在线预览以及在线编辑，对重要文档进行关注以及收藏，查看历史文件使用记录等。用户可以绑定邮箱，添加常用联系人，直接将系统中文件通过邮箱发送，以及直接下载邮箱文件到系统中。2.2.用户期望个人文档智能管理系统分为平台管理端、用户端二大模块，服务于用户、平台管理员二大对象，用户期望如图21所示。图21用户期望图3.项目目标个人文档智能管理系统将实现文档管理系统的智能化、灵活化，解决现有文档管理系统的搜索困难，不能记录自己对文档的看法、评价等问题，让用户快速得到准确、合适、完整、高质量的信息，可以灵活地组织、管理、检索个人数据，提高工作效率。项目组根据需求分析、可行性分析，提出系统平台管理端、用户端二大模块建设目标。目标如下：3.1.\t平台管理端目标3.2.\t用户端目标3.3.\t四大目标个人文档智能管理系统实现以下四大目标：1.\t全文检索快速查询，高级搜索准确定位对文档只有模糊记忆便可从海量文档中获取所需文档，极大减少了因查找困难浪费的工作时间。在文件搜索的基础上，可对文件进行包含文字、文件名、类型、标签、创建/修改时间进行条件搜索或组合查询并排序。准确定位文档，从而提高工作效率。2.\t语义检索，挖掘用户意图借助语义搜索功能，在检索文档时，不需要精挑细选关键词组合，zhi需要相关的词汇信息，系统进行智能扩充，从模糊的搜索词中准确地捕捉到用户所输入语句后面的真正意图，并以此来进行搜索，从而更准确地向用户返回最符合其需求的搜索结果。3.\t文档标签化管理，智能化文档归类在用户进行文档上传时对文档添加标签，让文档的维度越来越丰富，越来越容易被检索，越用越有价值。当用户陆续把标签贴到文件上之后，下次用户只要按照标签，就能组合筛选出各种有用的知识和讯息。文件可以被归档到不同的资料库里，每个库可以有一套自己的标签和标签分组。4.\t多样的文件查看方式，支持在线编辑预览提供“详细”，“缩略图”，二种浏览方式，自动显示缩略图、文档摘要等信息。提供文件详细描述信息，系统自动显示文件概要。文件预览支持音频及文档多种格式文件，无需下载，可直接预览查看和打印。能直接在系统内对office文档(Excel,PPT,Word)进行编辑，不需要通过外部进行编辑，方便操作。可对文档进行版本管理，可查阅历史文档内容，防止误操作导致文档损坏。4.服务模型个人文档智能管理系统分为平台管理端、用户端二大服务模块。平台管理端有权限管理、角色管理、用户管理、文件统计、文件管理、敏感词管理、反馈管理、系统运维等功能模块；用户端为用户提供文档上传、文档下载、文档搜索、语音搜索、在线预览、在线编辑、我的收藏、我的关注、历史纪录、邮箱管理、消息通知、任务清单等功能模块；结合用户期望，系统服务模型如下图4-1所示：4.1.\t角色划分4.1.1.\t平台管理员平台管理员登陆后，可对用户进行管理，包括用户信息和用户权限管理，文件管理，文件统计，对文档中的敏感词进行管理，管理用户的反馈信息。4.1.2.\t用户用户通过web登陆后,可以进行文档的上传和下载，文档搜索，在线预览和编辑文档，对重要文件收藏和关注，方便下一次使用；用户通过历史记录可以查看对文档已进行的以选择恢复误操作文档；绑定邮箱后无需下载即可通过邮箱发送，或者将邮箱文件下载到本系统中；编辑个人任务清单帮助用户更好的分配每项事情需要投入的精力和时间。用户通过移动端登陆后，支持在线预览、上传文件、下载文件、语音搜索等功能，实现app端与web端文件同步，方便管理。4.2.\t系统功能模块个人文档智能管理系统分为了平台管理端、用户端二大服务平台，各平台具体功能如下：4.2.1\t平台管理端平台管理端拥有的功能如下：（1）\t权限管理：可对用户使用本系统时拥有的权限进行管理。（2）\t角色管理：可进行添加、删除角色并对其分配权限。（3）\t文件管理：文件管理包括文件统计和文件管理两个模块，对用户上传的文档进行统计，删除操作等。（4）\t敏感词管理：对用户上传的文档进行敏感词检查，出现敏感词时进行删除。（5）\t系统管理：系统管理包括反馈管理和系统运维两大模块，对用户的反馈进行处理，检测软件能否正常运行。4.2.2.\t用户端用户web端拥有的功能如下：（1）\t文档上传：用户可以将文件上传到本系统。（2）\t文档下载：用户可以下载所需文件。（3）\t文档搜索：搜索用户想找到的文档。（4）\t文档操作：包括文档预览和文档编辑两个功能模块，用户无需下载直接进行预览和编辑操作。（5）\t我的关注：用户可将待办文档、特定文档加入我的关注，方便查看和管理。（6）\t我的收藏：用户可将常用文档加入我的收藏，方便查看和管理。（7）\t历史记录：用户可以查看过去的访问记录、查找记录等。（8）\t邮箱管理：绑定个人邮箱的SMTP和POP3，可添加常用联系人，对文档进行邮件发送，下载邮箱文件等。（9）\t消息通知：对上传文件后消息进行通知。（10）\t任务清单：用户可编辑个人任务清单，更清晰的查看待办事项。（11）\t个人资料：编辑个人信息。（12）\t意见反馈：将系统出现的影响到用户的问题反馈给平台运营方。用户移动端拥有的功能如下：（1）\t文档上传：用户可以将文件上传到本系统。（2）\t文档下载：用户可以下载所需文件。（3）\t文档搜索：搜索用户想找到的文档。（4）\t语音搜索：用户直接通过语音对文档进行搜索。（5）\t在线预览：无需下载直接对文件进行在线的预览。（6）\t我的关注：用户可将待办文档、特定文档加入我的关注，方便查看和管理。（7）\t我的收藏：用户可将常用文档加入我的收藏，方便查看和管理。（8）\t历史记录：用户可以查看过去的访问记录、查找记录等。5.\t可行性分析模块行性分析是通过对项目的主要内容和配套条件，从技术、经济、工程等方面进行调查研究和分析比较，项目决策提供依据的一种综合性的系统分析方法。该部分，项目组将结合实际，从商业、软件、外包三方面进行可行性分析。可行性分析模块如图5-1所示：5.1.\t商业可行性首先，项目组了解到，随着数字化时代的到来，个人日常工作、生活中的数据大量的增长，如果不好好的管理这些文档资料，时间长了，各种各样的文档越来越多，将造成保存困难，查找、使用不方便。一个智能的个人文档管理系统能够让人们在合适时间、合适的地方得到准确、合适、完整、高质量的信息，可以灵活地组织、管理、检索个人数据，提高工作效率。智能化、灵活管理也将成为文档管理领域的趋势。然后，通过各种方法了解到目前现有的个人文档管理系统的不足，并进行了详细的需求分析和系统设计，确保系统符合常规的文档管理系统，实现个人文档管理的智能化、灵活管理，实现创新突破。因此，本项目组认为个人文档智能管理系统是有商业可行性的。5.2.\t软件可行性在技术方面，项目组将根据系统功能、性能以及系统的各项约束条件分析各种架构的利弊，确定以何种架构构建系统。在确定总体格局后，划分系统功能模块，明确各个模块的功能以及相互之间的联系。针对不同模块所需的关键技术，将通过查阅资料、咨询专家等方式解决。在经济方面，根据技术分析，确定相关技术引进需要的资金花费，标准软件估算模式从多方面分析该系统实施的成本，以及收益，也包括外包收益的相关分析。在法律方面，查阅文献以及咨询相关专家，保证各个环节合法合理的实施。5.3\t外包可行性项目组通过详尽需求分析及市场分析，将全面系统的调研数据、项目计划以及项目组日常工作状态、整体精神面貌展示给培训公司，以获取委托公司信任。6.\t需求分析模型6.1.\t需求调研项目组首先进行初步调研，通过网上查询、市场调研等方式了解大多数人对文档管理系统的需求，记录数据并进行分析；获取大众对当前现有的文件管理系统的看法；分析现有的个人文档管理系统的优缺点与局限性；通过情景分析的方法对系统解决某个具体问题的方法给出情景描述，获得更加完善的用户需求。6.2\t快速原型快速原型模型的基本思想是：在获得一组基本需求说明时，快速“实现”基本功能，获得用户体验的反馈后，再逐步精确，从而获得合理、协调一致、可行的需求说明。快速原型有丢弃原型与进化原型两种方法。项目组采用进化原型，进化原型是先构造一个功能简单质量要求不高的模型系统，作为最终系统的核心，不断地根据用户需求扩充功能，形成最终的系统。使用快速原型模型要求确定系统大致方向和基础功能，因此一开始就要有一个清晰的认识7.\t创新点图71创新点7.1.\t技术层面7.1.1.\t语义检索7.2.\t功能层面7.2.1.\t全文检索快速查询，高级搜索准确定位对文档只有模糊记忆便可从海量文档中获取所需文档，极大减少了因查找困难浪费的工作时间。在文件搜索的基础上，可对文件进行包含文字、文件名、类型、标签、创建/修改时间进行条件搜索或组合查询并排序。准确定位文档，从而提高工作效率。7.2.2.\t文档标签化管理，智能化文档归类在用户进行文档上传时对文档添加标签，让文档的维度越来越丰富，越来越容易被检索，越用越有价值。当用户陆续把标签贴到文件上之后，下次用户只要按照标签，就能组合筛选出各种有用的知识和讯息。文件可以被归档到不同的资料库里，每个库可以有一套自己的标签和标签分组。7.2.3.\t语义检索，挖掘用户意图借助语义搜索功能，在检索文档时，不需要精挑细选关键词组合，zhi需要相关的词汇信息，系统进行智能扩充，从模糊的搜索词中准确地捕捉到用户所输入语句后面的真正意图，并以此来进行搜索，从而更准确地向用户返回最符合其需求的搜索结果7.3.\t使用层面7.3.1\t在线预览编辑文档无需下载用户便能够方便地查看、编辑文档信息。7.3.2\t多方式查询文档\uF06C\t\uF06C\t克服已有文件系统中仅基于关键字的搜索，提供多种检索途径，用户可以根据个人对于文档的熟悉程度选择不同的查询方式，检索更快速准确。7.3.3\t收藏关注文档用户可将待办文档、特定文档加入我的关注，将常用文档加入我的收藏，方便查看和管理。";

    private static final String TYPE = "dependent";

    public static void main(String[] args) throws IOException {
        System.out.println(TEXT.length());
        Map<String, String> header = buildHttpHeader();
        String result = HttpUtil.doPost1(WEBTTS_URL, header, "text=" + URLEncoder.encode(TEXT, "utf-8"));
        System.out.println("itp 接口调用结果：" + result);
    }

    /**
     * 组装http请求头
     */
    private static Map<String, String> buildHttpHeader() throws UnsupportedEncodingException {
        String curTime = System.currentTimeMillis() / 1000L + "";
        String param = "{\"type\":\"" + TYPE + "\"}";
        String paramBase64 = new String(Base64.encodeBase64(param.getBytes("UTF-8")));
        String checkSum = DigestUtils.md5Hex(API_KEY + curTime + paramBase64);
        Map<String, String> header = new HashMap<String, String>();
        header.put("Content-Type", "application/x-www-form-urlencoded; charset=utf-8");
        header.put("X-Param", paramBase64);
        header.put("X-CurTime", curTime);
        header.put("X-CheckSum", checkSum);
        header.put("X-Appid", APPID);
        System.out.println(param);
        System.out.println(paramBase64);
        System.out.println(checkSum);
        return header;
    }
}
